# Build requirements
# See [PEP 518](https://peps.python.org/pep-0518/#build-system-table)
[build-system]
build-backend = "flit_core.buildapi"
requires = ["flit_core >=3.2,<4"]

# Project Metadata
# See [PEP 621](https://peps.python.org/pep-0621/#details)
[project]
authors = [
  { name = "{{cookiecutter.author}}", email = "{{cookiecutter.author_email}}" },
]
description = "{{cookiecutter.description}}"
# keywords = []
# license = "MIT"
dynamic = ["version"]
name = "{{cookiecutter.slug}}"
readme = "README.md"
requires-python = ">=3.10"
# Core dependencies
dependencies = []

[project.optional-dependencies]
dev = [
  "bandit[toml]==1.7.4",
  "black",
  "isort",
  "pylama[eradicate,mypy,radon,toml]",
  "pre-commit",
  "ruff",
  "nbqa>=1.5.3",
  "pyprojroot>=0.2.0",
  "python-dotenv>=0.21.0",
  "awscli==1.27.42"
]
doc = [
  "mkdocs==1.4.2",
  "mkdocs-autorefs==0.4.1",
  "mkdocs-exclude==1.0.2",
  "mkdocs-gen-files==0.4.0",
  "mkdocs-git-revision-date-localized-plugin==1.1.0",
  "mkdocs-literate-nav==0.5.0",
  "mkdocs-material==8.5.10",
  "mkdocs-minify-plugin==0.6.1",
  "mkdocstrings[python]==0.19.0",
  "mkdocs_gen_files>=0.4.0"
]
test = [
  "pytest>=7.2.0",
  "pytest-randomly>=3.12.0",
  "coverage>=7.0.1",
  "pytest-xdist==3.1.0"
]

[project.urls]
# changelog = ""
# documentation = ""
# homepage = ""
repository = "{{cookiecutter.github_repo}}"

# https://coverage.readthedocs.io/en/7.0.1/config.html
[tool.coverage.report]
omit = ["*/__init__.py", "tests/*", "templates/**"]
skip_empty = true

# https://github.com/psf/black
[tool.black]
line-length = 88

# https://github.com/PyCQA/isort
[tool.isort]
known_local_folder = ["{{cookiecutter.package_name}}"]
lines_after_imports = 2
profile = "black"
skip_gitignore = true

# https://github.com/charliermarsh/ruff
[tool.ruff]
ignore = [
  # Avoid checking for line-length violations
  "E501",
  # Conflicts with Google style
  "D203",
  "D204",
  "D213",
  "D215",
  "D400",
  "D404",
  "D406",
  "D407",
  "D408",
  "D409",
  "D413",
]
line-length = 88
select = [
  "E", # [`pycodestyle`](https://github.com/charliermarsh/ruff#pycodestyle)
  "F", # [`pyflakes`](https://github.com/charliermarsh/ruff#pyflakes)
  "D", # [`pydocstyle`](https://github.com/charliermarsh/ruff#pydocstyle)
  "U", # [`pyupgrade`](https://github.com/charliermarsh/ruff#pyupgrade)
  "N", # [`pep8-naming`](https://github.com/charliermarsh/ruff#pep8-naming)
  "C", # [`flake8-comprehensions`](https://github.com/charliermarsh/ruff#flake8-comprehensions)
  "B", # [`flake8-bugbear`](https://github.com/charliermarsh/ruff#flake8-bugbear)
  "A", # [`flake8-builtins`](https://github.com/charliermarsh/ruff#flake8-builtins)
  "Q", # [`flake8-quotes`](https://github.com/charliermarsh/ruff#flake8-quotes)
  "ANN", # [`flake8-annotations`](https://github.com/charliermarsh/ruff#flake8-annotations)
  "RUF", # [`ruff`](https://github.com/charliermarsh/ruff#ruff-specific-rules)
  "M", # [`noqa`](https://github.com/charliermarsh/ruff#meta-rules)

]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
per-file-ignores = {  }
# Assume Python 3.10.
target-version = "py310"

# https://github.com/klen/pylama
[tool.pylama]
linters = "eradicate,mccabe,mypy,radon"
max_line_length = 88
disable_error_code = "annotation-unchecked"

[tool.flake8]
ignore = [
  "E501", #line too long
  "E504", #line break after binary operator
  "W503", #line break before binary operator

]

[tool.bandit]
ignore = [
  "B101", # Use of assert detected. The enclosed code will be removed when compiling to optimised byte code.

]
